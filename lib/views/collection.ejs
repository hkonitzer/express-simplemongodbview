<!doctype html>
<html>
  <head>
    <title><%=collection%> &mdash; DB VIEWER <%=version%></title>
    <meta name="viewport" content="width=device-width">    
    <link href="<%=cdnurl%>/css/main.css" rel="stylesheet" type="text/css"> 
    <link href="http://code.jquery.com/ui/1.10.3/themes/redmond/jquery-ui.css" rel="stylesheet" type="text/css">
    <link href="<%=cdnurl%>/css/ui.jqgrid.css" media="screen" rel="stylesheet" type="text/css"/>
    <link rel="stylesheet" type="text/css" media="screen" href="<%=cdnurl%>/css/ui.multiselect.css" />    
    <script src="<%=cdnurl%>/js/libs/jquery-1.9.1.min.js"></script>
    <script src="<%=cdnurl%>/js/libs/jquery-ui-1.10.3.custom.min.js"></script>
    <script src="<%=cdnurl%>/js/libs/i18n/grid.locale-en.js" type="text/javascript"></script>
    <!-- <script src="<%=cdnurl%>/js/libs/ui.multiselect.js" type="text/javascript"></script> -->
    <script src="<%=cdnurl%>/js/libs/jquery.jqGrid.min.js" type="text/javascript"></script>
    <script src="<%=cdnurl%>/js/libs/underscore-min.js"></script>
    <script src="<%=cdnurl%>/js/libs/backbone-min.js"></script>  
    <script src="/socket.io/socket.io.js"></script>
    <script src="<%=cdnurl%>/js/main.js<% if (cdnurl ==='/external') { %>?<%= new Date().getTime() %><%}%>"></script>
  </head>
  <body>
    <table id="grid"></table>
    <div id="pager"></div>

    <script>
      var tree = [];
      <% for (var property in schema.tree) { 
        var propertyConfig = schema.tree[property];
        var propertySchemaType = null;
        var propertyhasFieldIndex = false;
        if (propertyConfig instanceof Function === true) { // simple schema type
          propertySchemaType = propertyConfig.toString().substring(9, propertyConfig.toString().indexOf('('));           
        } else if (propertyConfig.type instanceof Function === true) { // configured schema type
          propertySchemaType = propertyConfig.type.toString().substring(9, propertyConfig.type.toString().indexOf('('));      
          if (propertyConfig.index) propertyhasFieldIndex = propertyConfig.index;            
        } else {  // arrays and objects            
          if (propertyConfig instanceof Array) {              
            propertySchemaType = propertyConfig.toString().substring(9, propertyConfig.toString().indexOf('(')) + 'Array';              
          } else continue;// id field as [object Object]
        }
        if (propertySchemaType === null) propertySchemaType = 'unknown';
        %>
        tree.push({property: '<%=property%>', type: '<%=propertySchemaType %>' , index: <%=propertyhasFieldIndex%>});        
      <% } %>    
      
      var gridOptions = {
        url: '/api/db/<%=collection%>',
        datatype: 'json',
        postData: {},
        mtype: 'GET',
        cmTemplate: { 
          sortable: true, hidden: false, editable: false, 
          searchoptions: { 
            sopt: ['eq','ne','lt','le','gt','ge']
          }
        },
        colNames: [],
        colModel: [],
        jsonReader : {
          id: '_id',
          repeatitems: true,
          root: 'data',
          total: function (obj) { return obj.total; },
          records: function (obj) { return obj.records; },
          page: function (obj) { return 1; }
        },
        prmNames: { nd: '_' },
        height: '100%',
        autowidth: true,
        shrinkToFit: true,
        loadonce: false,
        pager: '#pager',
        rowNum: 30,
        rowList: [10, 30, 50, 100, 1000],
        pgbuttons: false,
        pginput: false,        
        hidegrid: true,
        sortable: true,        
        sortname: "_id",
        sortorder: "desc",
        scroll: false,
        viewrecords: true,
        gridview: true,
        autoencode: true,
        caption: '',
        jqGridResizeStop: function(id) {
          console.log('EVENT', id);
        },
        beforeRequest: function() {
          $('div#model').find('.collectionHeaderAjaxLoader').show();          
        },
        loadComplete: function() {
          $('div#model').find('.collectionHeaderAjaxLoader').hide();
        }
      }
      var colModelInit = [];
      gridOptions.colNames.push('_id');
      gridOptions.colModel.push({ name: '_id', width: 140, hidden: false, frozen: true, sortable: false, searchoptions:{ sopt:['eq'] }});
      
      for (var a = 0, ax = tree.length; a < ax; ++a) {
        var p = tree[a];        
        if (p.property === '_id') continue;
        this.gridOptions.colNames.push(p.property);
        var colModelOptions = { 
          name: p.property
        }
        if (p.type === 'Number') colModelOptions.searchrules = { number: true };
        this.gridOptions.colModel.push(colModelOptions);
        
      }
      
      var savedColModel = localStorage.getItem('<%=collection%>');
      if (savedColModel) {
        savedColModel = JSON.parse(savedColModel);
        for (var s in savedColModel) {          
          for (var c in gridOptions.colModel) {
            if (gridOptions.colModel[c].name === savedColModel[s].name) {
              gridOptions.colModel[c].hidden = savedColModel[s].hidden;
              gridOptions.colModel[c].width = savedColModel[s].width;
            }
          }
          
        }
      }
      
      $('#grid').jqGrid(gridOptions);   
      $('#grid').jqGrid('navGrid', gridOptions.pager, {edit:false,add:false,del:false,refresh:true,search:true}, {}, {}, {}, {multipleSearch:true, showQuery: true, multipleGroup: false} );
      
      $('#grid').jqGrid('filterToolbar',{searchOperators : false});
      
      var thatel = $('#grid');
      thatel.jqGrid('navButtonAdd', gridOptions.pager, { 
        caption: 'Columns', title: 'Reorder Columns', 
        onClickButton : function (){ 
          thatel.jqGrid('columnChooser', {
            done: function(perm) {            
              if (perm) {
                localStorage.setItem('<%=collection%>', JSON.stringify(this.getGridParam('colModel')));             
              }
            }
          });
        } 
      });
  
      $('#grid').on('jqGridResizeStop', function(id) {
        localStorage.setItem('<%=collection%>', JSON.stringify($('#grid').getGridParam('colModel')));        
      });

    </script>
  </body>
</html>